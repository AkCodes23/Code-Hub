Medium: Reverse a Stack

#include <stdio.h>
#include <stdlib.h>

#define MAX 100

typedef struct {
    int items[MAX];
    int top;
} Stack;

void initStack(Stack *s) {
    s->top = -1;
}

int isFull(Stack *s) {
    return s->top == MAX - 1;
}

int isEmpty(Stack *s) {
    return s->top == -1;
}

void push(Stack *s, int item) {
    if (isFull(s)) {
        printf("Stack is full\n");
        return;
    }
    s->items[++s->top] = item;
}

int pop(Stack *s) {
    if (isEmpty(s)) {
        printf("Stack is empty\n");
        return -1;
    }
    return s->items[s->top--];
}

int peek(Stack *s) {
    if (isEmpty(s)) {
        printf("Stack is empty\n");
        return -1;
    }
    return s->items[s->top];
}

void reverseStack(Stack *s) {
    Stack tempStack;
    initStack(&tempStack);

    while (!isEmpty(s)) {
        push(&tempStack, pop(s));
    }

    while (!isEmpty(&tempStack)) {
        push(s, pop(&tempStack));
    }
}

int main() {
    Stack s;
    initStack(&s);

    push(&s, 10);
    push(&s, 20);
    push(&s, 30);

    printf("Stack before reversing:\n");
    while (!isEmpty(&s)) {
        printf("%d ", peek(&s));
        pop(&s);
    }

    push(&s, 10);
    push(&s, 20);
    push(&s, 30);

    reverseStack(&s);

    printf("\nStack after reversing:\n");
    while (!isEmpty(&s)) {
        printf("%d ", peek(&s));
        pop(&s);
    }

    return 0;
}
